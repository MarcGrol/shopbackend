// Code generated by MockGen. DO NOT EDIT.
// Source: api.go

// Package myvault is a generated GoMock package.
package myvault

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockVaultReader is a mock of VaultReader interface.
type MockVaultReader struct {
	ctrl     *gomock.Controller
	recorder *MockVaultReaderMockRecorder
}

// MockVaultReaderMockRecorder is the mock recorder for MockVaultReader.
type MockVaultReaderMockRecorder struct {
	mock *MockVaultReader
}

// NewMockVaultReader creates a new mock instance.
func NewMockVaultReader(ctrl *gomock.Controller) *MockVaultReader {
	mock := &MockVaultReader{ctrl: ctrl}
	mock.recorder = &MockVaultReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVaultReader) EXPECT() *MockVaultReaderMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockVaultReader) Get(c context.Context, uid string) (Token, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", c, uid)
	ret0, _ := ret[0].(Token)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Get indicates an expected call of Get.
func (mr *MockVaultReaderMockRecorder) Get(c, uid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockVaultReader)(nil).Get), c, uid)
}

// MockVaultReadWriter is a mock of VaultReadWriter interface.
type MockVaultReadWriter struct {
	ctrl     *gomock.Controller
	recorder *MockVaultReadWriterMockRecorder
}

// MockVaultReadWriterMockRecorder is the mock recorder for MockVaultReadWriter.
type MockVaultReadWriterMockRecorder struct {
	mock *MockVaultReadWriter
}

// NewMockVaultReadWriter creates a new mock instance.
func NewMockVaultReadWriter(ctrl *gomock.Controller) *MockVaultReadWriter {
	mock := &MockVaultReadWriter{ctrl: ctrl}
	mock.recorder = &MockVaultReadWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVaultReadWriter) EXPECT() *MockVaultReadWriterMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockVaultReadWriter) Get(c context.Context, uid string) (Token, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", c, uid)
	ret0, _ := ret[0].(Token)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Get indicates an expected call of Get.
func (mr *MockVaultReadWriterMockRecorder) Get(c, uid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockVaultReadWriter)(nil).Get), c, uid)
}

// Put mocks base method.
func (m *MockVaultReadWriter) Put(c context.Context, uid string, value Token) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Put", c, uid, value)
	ret0, _ := ret[0].(error)
	return ret0
}

// Put indicates an expected call of Put.
func (mr *MockVaultReadWriterMockRecorder) Put(c, uid, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Put", reflect.TypeOf((*MockVaultReadWriter)(nil).Put), c, uid, value)
}
